/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.LibMS.Frames;

import com.LibMS.Common.DBConnect;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author B.M.D.C.Bandara
 */
public class AddViewMember extends javax.swing.JFrame {

    String id;
    boolean allDoneAdd;
    boolean allDoneUpdate;

    /**
     * Creates new form AddViewMember
     */
    public AddViewMember() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            System.out.println(ex);
        }
        initComponents();
        setLocationRelativeTo(null);
        setImage(new File("pics/lend2.jpg"), lab_image);
        loadTableData();
        layer_viewMem.setVisible(true);
        layer_addMem.setVisible(false);
        layer_updateMem.setVisible(false);
        jLabel1.setText("View Members");
        setButtons();
        but_addMem.grabFocus();
        setImage(new File("pics/report_black.png"), lab_report);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        lab_image = new javax.swing.JLabel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        layer_viewMem = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        but_viewUpdateMem = new javax.swing.JButton();
        cb_searchCategory = new javax.swing.JComboBox<>();
        txt_search = new javax.swing.JTextField();
        but_addMem = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        lab_report = new javax.swing.JLabel();
        layer_addMem = new javax.swing.JLayeredPane();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txt_add_home = new javax.swing.JTextField();
        txt_add_street = new javax.swing.JTextField();
        txt_add_zone = new javax.swing.JTextField();
        txt_add_city = new javax.swing.JTextField();
        txt_add_postal = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        rb_add_active = new javax.swing.JRadioButton();
        rb_add_inactive = new javax.swing.JRadioButton();
        but_add_back = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        but_add = new javax.swing.JButton();
        jLayeredPane6 = new javax.swing.JLayeredPane();
        jLabel13 = new javax.swing.JLabel();
        txt_add_fname = new javax.swing.JTextField();
        txt_add_lname = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_add_mobile = new javax.swing.JTextField();
        txt_add_nic = new javax.swing.JTextField();
        rb_add_male = new javax.swing.JRadioButton();
        rb_add_female = new javax.swing.JRadioButton();
        layer_updateMem = new javax.swing.JLayeredPane();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        txt_mobile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        rb_male = new javax.swing.JRadioButton();
        rb_female = new javax.swing.JRadioButton();
        txt_lname = new javax.swing.JTextField();
        txt_fname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_home = new javax.swing.JTextField();
        txt_street = new javax.swing.JTextField();
        txt_zone = new javax.swing.JTextField();
        txt_city = new javax.swing.JTextField();
        txt_postal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        rb_active = new javax.swing.JRadioButton();
        rb_inactive = new javax.swing.JRadioButton();
        but_back = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        but_update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Member Management Window");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("View Members");
        jLayeredPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 300, 50));
        jLayeredPane1.add(lab_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 768));

        jLayeredPane4.setMaximumSize(new java.awt.Dimension(966, 768));
        jLayeredPane4.setMinimumSize(new java.awt.Dimension(966, 768));
        jLayeredPane4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        layer_viewMem.setBackground(new java.awt.Color(255, 255, 255));
        layer_viewMem.setMaximumSize(new java.awt.Dimension(966, 768));
        layer_viewMem.setMinimumSize(new java.awt.Dimension(966, 768));
        layer_viewMem.setOpaque(true);
        layer_viewMem.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEMBER ID", "FIRST NAME", "LAST NAME", "NIC", "MOBILE No", "GENDER", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);

        layer_viewMem.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 920, 390));

        but_viewUpdateMem.setBackground(new java.awt.Color(255, 255, 255));
        but_viewUpdateMem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_viewUpdateMem.setText("View / Update Member");
        but_viewUpdateMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_viewUpdateMemActionPerformed(evt);
            }
        });
        layer_viewMem.add(but_viewUpdateMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 640, 230, 42));

        cb_searchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "First Name", "NIC", "Mobile No." }));
        layer_viewMem.add(cb_searchCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, 70, 30));

        txt_search.setText("Search");
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_searchFocusLost(evt);
            }
        });
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        layer_viewMem.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 170, 180, 30));

        but_addMem.setBackground(new java.awt.Color(255, 255, 255));
        but_addMem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_addMem.setText("Add Member");
        but_addMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addMemActionPerformed(evt);
            }
        });
        layer_viewMem.add(but_addMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 185, 41));

        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 255));
        jButton5.setText("Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        layer_viewMem.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, -1, -1));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        layer_viewMem.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 10, 35));

        jButton6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 153, 153));
        jButton6.setText("Member");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        layer_viewMem.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 90, -1));

        lab_report.setText("jLabel24");
        lab_report.setToolTipText("Genarate Member Report");
        lab_report.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lab_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_reportMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_reportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_reportMouseExited(evt);
            }
        });
        layer_viewMem.add(lab_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 652, 30, 30));

        jLayeredPane4.add(layer_viewMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 966, 768));

        layer_addMem.setBackground(new java.awt.Color(255, 255, 255));
        layer_addMem.setMaximumSize(new java.awt.Dimension(966, 768));
        layer_addMem.setMinimumSize(new java.awt.Dimension(966, 768));
        layer_addMem.setOpaque(true);
        layer_addMem.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setText("Postal Code");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setText("City");

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setText("Zone");

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel21.setText("Street");

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel22.setText("Home Name / No.");

        txt_add_home.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_home.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_homeKeyPressed(evt);
            }
        });

        txt_add_street.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_street.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_streetKeyPressed(evt);
            }
        });

        txt_add_zone.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_zone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_zoneKeyPressed(evt);
            }
        });

        txt_add_city.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_city.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_cityKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_cityKeyTyped(evt);
            }
        });

        txt_add_postal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_postal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_postalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_postalKeyTyped(evt);
            }
        });

        jLayeredPane3.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_add_home, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_add_street, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_add_zone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_add_city, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_add_postal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane3Layout.createSequentialGroup()
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_home, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane3Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_street, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane3Layout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_zone, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane3Layout.createSequentialGroup()
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_city, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane3Layout.createSequentialGroup()
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_postal, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 186, Short.MAX_VALUE)
            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_zone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_postal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        layer_addMem.add(jLayeredPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 630, 210));

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel23.setText("Status");
        layer_addMem.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 570, 133, 28));

        rb_add_active.setBackground(new java.awt.Color(255, 255, 255));
        rb_add_active.setText("Active");
        rb_add_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_add_activeKeyPressed(evt);
            }
        });
        layer_addMem.add(rb_add_active, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 570, -1, -1));

        rb_add_inactive.setBackground(new java.awt.Color(255, 255, 255));
        rb_add_inactive.setText("Inactive");
        rb_add_inactive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_add_inactiveKeyPressed(evt);
            }
        });
        layer_addMem.add(rb_add_inactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 570, -1, -1));

        but_add_back.setBackground(new java.awt.Color(51, 123, 255));
        but_add_back.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_add_back.setText("Back");
        but_add_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        but_add_back.setOpaque(false);
        but_add_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_add_backActionPerformed(evt);
            }
        });
        but_add_back.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_add_backKeyPressed(evt);
            }
        });
        layer_addMem.add(but_add_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 620, 150, 40));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        layer_addMem.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 620, 10, 40));

        but_add.setBackground(new java.awt.Color(51, 123, 255));
        but_add.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_add.setText("Add");
        but_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        but_add.setOpaque(false);
        but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addActionPerformed(evt);
            }
        });
        but_add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_addKeyPressed(evt);
            }
        });
        layer_addMem.add(but_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, 120, 40));

        jLayeredPane6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Primary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setText("First Name");

        txt_add_fname.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_fnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_fnameKeyTyped(evt);
            }
        });

        txt_add_lname.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_lnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_lnameKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setText("Last Name");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setText("Gender");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel15.setText("NIC No.");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setText("Mobile No.");

        txt_add_mobile.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_mobileKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_add_mobileKeyTyped(evt);
            }
        });

        txt_add_nic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_add_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_add_nicKeyPressed(evt);
            }
        });

        rb_add_male.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_add_male);
        rb_add_male.setText("Male");
        rb_add_male.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_add_maleKeyPressed(evt);
            }
        });

        rb_add_female.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_add_female);
        rb_add_female.setText("Female");
        rb_add_female.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_add_femaleKeyPressed(evt);
            }
        });

        jLayeredPane6.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(txt_add_fname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(txt_add_lname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(txt_add_mobile, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(txt_add_nic, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(rb_add_male, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(rb_add_female, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane6Layout = new javax.swing.GroupLayout(jLayeredPane6);
        jLayeredPane6.setLayout(jLayeredPane6Layout);
        jLayeredPane6Layout.setHorizontalGroup(
            jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
            .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane6Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane6Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane6Layout.createSequentialGroup()
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(rb_add_male)
                            .addGap(81, 81, 81)
                            .addComponent(rb_add_female))
                        .addGroup(jLayeredPane6Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane6Layout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_add_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane6Layout.setVerticalGroup(
            jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rb_add_male)
                        .addComponent(rb_add_female))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_add_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        layer_addMem.add(jLayeredPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 630, 240));

        jLayeredPane4.add(layer_addMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 966, 768));

        layer_updateMem.setBackground(new java.awt.Color(255, 255, 255));
        layer_updateMem.setMaximumSize(new java.awt.Dimension(966, 768));
        layer_updateMem.setMinimumSize(new java.awt.Dimension(966, 768));
        layer_updateMem.setOpaque(true);
        layer_updateMem.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Primary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        txt_mobile.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_mobileKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mobileKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Mobile No.");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("NIC No.");

        txt_nic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nicKeyPressed(evt);
            }
        });

        rb_male.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_male);
        rb_male.setText("Male");
        rb_male.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_maleKeyPressed(evt);
            }
        });

        rb_female.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_female);
        rb_female.setText("Female");
        rb_female.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_femaleKeyPressed(evt);
            }
        });

        txt_lname.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_lnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lnameKeyTyped(evt);
            }
        });

        txt_fname.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_fnameKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("First Name");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Gender");

        jLayeredPane5.setLayer(txt_mobile, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txt_nic, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(rb_male, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(rb_female, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txt_lname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txt_fname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
            .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane5Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane5Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane5Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(rb_male)
                            .addGap(81, 81, 81)
                            .addComponent(rb_female))
                        .addGroup(jLayeredPane5Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane5Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
            .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rb_male)
                        .addComponent(rb_female))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        layer_updateMem.add(jLayeredPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 630, 230));

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Postal Code");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("City");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Zone");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Street");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Home Name / No.");

        txt_home.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_home.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_homeKeyPressed(evt);
            }
        });

        txt_street.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_street.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_streetKeyPressed(evt);
            }
        });

        txt_zone.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_zone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_zoneKeyPressed(evt);
            }
        });

        txt_city.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_city.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cityKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cityKeyTyped(evt);
            }
        });

        txt_postal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_postal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_postalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_postalKeyTyped(evt);
            }
        });

        jLayeredPane2.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txt_home, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txt_street, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txt_zone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txt_city, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txt_postal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_home, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_street, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_zone, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jLayeredPane2Layout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(147, 147, 147)
                            .addComponent(txt_postal, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 186, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_street, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_zone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(2, 2, 2)
                    .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_postal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        layer_updateMem.add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 630, 210));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Status");
        layer_updateMem.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 560, 133, 28));

        rb_active.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(rb_active);
        rb_active.setText("Active");
        rb_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_activeKeyPressed(evt);
            }
        });
        layer_updateMem.add(rb_active, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 560, -1, -1));

        rb_inactive.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(rb_inactive);
        rb_inactive.setText("Inactive");
        rb_inactive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_inactiveKeyPressed(evt);
            }
        });
        layer_updateMem.add(rb_inactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 560, -1, -1));

        but_back.setBackground(new java.awt.Color(51, 123, 255));
        but_back.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_back.setText("Back");
        but_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        but_back.setOpaque(false);
        but_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_backActionPerformed(evt);
            }
        });
        but_back.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_backKeyPressed(evt);
            }
        });
        layer_updateMem.add(but_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 610, 150, 40));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        layer_updateMem.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 610, 10, 40));

        but_update.setBackground(new java.awt.Color(51, 123, 255));
        but_update.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_update.setText("Update");
        but_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        but_update.setOpaque(false);
        but_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_updateActionPerformed(evt);
            }
        });
        but_update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_updateKeyPressed(evt);
            }
        });
        layer_updateMem.add(but_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 610, 120, 40));

        jLayeredPane4.add(layer_updateMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 966, 768));

        jLayeredPane1.add(jLayeredPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 966, 768));

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_addMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addMemActionPerformed
        layer_updateMem.setVisible(false);
        layer_viewMem.setVisible(false);
        layer_addMem.setVisible(true);
        jLabel1.setText("Add Member");
    }//GEN-LAST:event_but_addMemActionPerformed

    private void txt_fnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_fname.getText().trim().equals("")) {
            txt_lname.grabFocus();
        }
    }//GEN-LAST:event_txt_fnameKeyPressed

    private void txt_lnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_lname.getText().trim().equals("")) {
            rb_male.grabFocus();
        }
    }//GEN-LAST:event_txt_lnameKeyPressed

    private void txt_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_nic.getText().trim().equals("")) {
            txt_mobile.grabFocus();
        }
    }//GEN-LAST:event_txt_nicKeyPressed

    private void txt_mobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobileKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_mobile.getText().trim().equals("")) {
            txt_home.grabFocus();
        }
    }//GEN-LAST:event_txt_mobileKeyPressed

    private void txt_cityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cityKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_city.getText().trim().equals("")) {
            txt_postal.grabFocus();
        }
    }//GEN-LAST:event_txt_cityKeyPressed

    private void txt_homeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_homeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_home.getText().trim().equals("")) {
            txt_street.grabFocus();
        }
    }//GEN-LAST:event_txt_homeKeyPressed

    private void txt_streetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_streetKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_street.getText().trim().equals("")) {
            txt_zone.grabFocus();
        }
    }//GEN-LAST:event_txt_streetKeyPressed

    private void txt_zoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_zoneKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_zone.getText().trim().equals("")) {
            txt_city.grabFocus();
        }
    }//GEN-LAST:event_txt_zoneKeyPressed

    private void txt_postalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_postalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || !txt_postal.getText().trim().equals("")) {
            rb_active.grabFocus();
        }
    }//GEN-LAST:event_txt_postalKeyPressed

    private void but_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_backActionPerformed
//        layer_viewMem.setVisible(true);
//        layer_updateMem.setVisible(false);
//        layer_addMem.setVisible(false);
//        jLabel1.setText("View Members");
        new AddViewMember().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_but_backActionPerformed

    private void but_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_updateActionPerformed
        UpdateMemberData();
    }//GEN-LAST:event_but_updateActionPerformed

    private void but_updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_updateKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_update.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            but_back.grabFocus();
        }
    }//GEN-LAST:event_but_updateKeyPressed

    private void txt_add_fnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_fnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_fname.getText().trim().equals("")) {
            txt_add_lname.grabFocus();
        }
    }//GEN-LAST:event_txt_add_fnameKeyPressed

    private void txt_add_lnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_lnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_lname.getText().trim().equals("")) {
            rb_add_male.grabFocus();
        }
    }//GEN-LAST:event_txt_add_lnameKeyPressed

    private void txt_add_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_nicKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_nic.getText().trim().equals("")) {
            txt_add_mobile.grabFocus();
        }
    }//GEN-LAST:event_txt_add_nicKeyPressed

    private void txt_add_mobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_mobileKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_mobile.getText().trim().equals("")) {
            txt_add_home.grabFocus();
        }
    }//GEN-LAST:event_txt_add_mobileKeyPressed

    private void txt_add_homeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_homeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_home.getText().trim().equals("")) {
            txt_add_street.grabFocus();
        }
    }//GEN-LAST:event_txt_add_homeKeyPressed

    private void txt_add_streetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_streetKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_street.getText().trim().equals("")) {
            txt_add_zone.grabFocus();
        }
    }//GEN-LAST:event_txt_add_streetKeyPressed

    private void txt_add_zoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_zoneKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_zone.getText().trim().equals("")) {
            txt_add_city.grabFocus();
        }
    }//GEN-LAST:event_txt_add_zoneKeyPressed

    private void txt_add_cityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_cityKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_city.getText().trim().equals("")) {
            txt_add_postal.grabFocus();
        }
    }//GEN-LAST:event_txt_add_cityKeyPressed

    private void txt_add_postalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_postalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_add_postal.getText().trim().equals("")) {
            rb_add_active.grabFocus();
        }
    }//GEN-LAST:event_txt_add_postalKeyPressed

    private void but_add_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_add_backActionPerformed
        new AddViewMember().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_but_add_backActionPerformed

    private void but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addActionPerformed
        addMember();
    }//GEN-LAST:event_but_addActionPerformed

    private void but_addKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_addKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_add.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            but_add_back.grabFocus();
        }
    }//GEN-LAST:event_but_addKeyPressed

    private void but_viewUpdateMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_viewUpdateMemActionPerformed
        if (jTable1.getSelectedRow() != -1 && jTable1.getSelectedRowCount() == 1) {
            layer_updateMem.setVisible(true);
            layer_addMem.setVisible(false);
            layer_viewMem.setVisible(false);
            jLabel1.setText("Update Member");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            id = dtm.getValueAt(jTable1.getSelectedRow(), 0).toString();

            try {
                ResultSet search = DBConnect.search("select * from member where id='" + id + "'");
                if (search.next()) {
                    txt_fname.setText(search.getString("fname"));
                    txt_lname.setText(search.getString("lname"));
                    if (search.getString("gender").equalsIgnoreCase("M")) {
                        rb_male.setSelected(true);
                    } else {
                        rb_female.setSelected(true);
                    }
                    txt_nic.setText(search.getString("nic"));
                    txt_mobile.setText(search.getString("phone"));
                    txt_home.setText(search.getString("home"));
                    txt_street.setText(search.getString("street"));
                    txt_zone.setText(search.getString("zone"));
                    txt_city.setText(search.getString("city"));
                    txt_postal.setText(search.getString("postalcode"));
                    if (search.getBoolean("stat")) {
                        rb_active.setSelected(true);
                    } else {
                        rb_inactive.setSelected(true);
                    }
                    but_back.grabFocus();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a member from the table to view or update.");
        }
    }//GEN-LAST:event_but_viewUpdateMemActionPerformed

    private void rb_add_maleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_add_maleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_add_female.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_add_male.setSelected(true);
            txt_add_nic.grabFocus();
        }
    }//GEN-LAST:event_rb_add_maleKeyPressed

    private void rb_add_femaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_add_femaleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_add_male.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_add_female.setSelected(true);
            txt_add_nic.grabFocus();
        }
    }//GEN-LAST:event_rb_add_femaleKeyPressed

    private void rb_add_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_add_activeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_add_inactive.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_add_active.setSelected(true);
            but_add.grabFocus();
        }
    }//GEN-LAST:event_rb_add_activeKeyPressed

    private void rb_add_inactiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_add_inactiveKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_add_active.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_add_inactive.setSelected(true);
            but_add.grabFocus();
        }
    }//GEN-LAST:event_rb_add_inactiveKeyPressed

    private void txt_add_fnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_fnameKeyTyped
        if (!(Character.getType(evt.getKeyChar()) == 1 || Character.getType(evt.getKeyChar()) == 2)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_add_fnameKeyTyped

    private void txt_add_lnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_lnameKeyTyped
        if (!(Character.getType(evt.getKeyChar()) == 1 || Character.getType(evt.getKeyChar()) == 2)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_add_lnameKeyTyped

    private void txt_add_mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_mobileKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_add_mobileKeyTyped

    private void txt_add_postalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_postalKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_add_postalKeyTyped

    private void txt_add_cityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_add_cityKeyTyped
        if (!(Character.getType(evt.getKeyChar()) == 1 || Character.getType(evt.getKeyChar()) == 2)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_add_cityKeyTyped

    private void rb_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_activeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_active.setSelected(true);
            but_update.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_inactive.grabFocus();
        }
    }//GEN-LAST:event_rb_activeKeyPressed

    private void rb_inactiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_inactiveKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_inactive.setSelected(true);
            but_update.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_active.grabFocus();
        }
    }//GEN-LAST:event_rb_inactiveKeyPressed

    private void rb_maleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_maleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_male.setSelected(true);
            txt_nic.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_female.grabFocus();
        }
    }//GEN-LAST:event_rb_maleKeyPressed

    private void rb_femaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_femaleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_female.setSelected(true);
            txt_nic.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_male.grabFocus();
        }
    }//GEN-LAST:event_rb_femaleKeyPressed

    private void but_backKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_backKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_back.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            but_update.grabFocus();
        }
    }//GEN-LAST:event_but_backKeyPressed

    private void txt_fnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fnameKeyTyped
        if (!(Character.getType(evt.getKeyChar()) == 1 || Character.getType(evt.getKeyChar()) == 2)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_fnameKeyTyped

    private void txt_lnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lnameKeyTyped
        if (!(Character.getType(evt.getKeyChar()) == 1 || Character.getType(evt.getKeyChar()) == 2)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_lnameKeyTyped

    private void txt_cityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cityKeyTyped
        if (!(Character.getType(evt.getKeyChar()) == 1 || Character.getType(evt.getKeyChar()) == 2)) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_cityKeyTyped

    private void txt_mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobileKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_mobileKeyTyped

    private void txt_postalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_postalKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_postalKeyTyped

    private void but_add_backKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_add_backKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_add_back.doClick();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            but_add.grabFocus();
        }
    }//GEN-LAST:event_but_add_backKeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txt_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusLost
        txt_search.setText("Search");
    }//GEN-LAST:event_txt_searchFocusLost

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        searchMem();
    }//GEN-LAST:event_txt_searchActionPerformed

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        txt_search.setText(null);
    }//GEN-LAST:event_txt_searchFocusGained

    private void lab_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_reportMouseClicked
        if (jTable1.getSelectedRow() != -1) {
            if (jTable1.getSelectedRowCount() == 1) {
                String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();

                try {
                    String path = "C:\\Users\\B.M.D.C.Bandara\\Documents\\NetBeansProjects\\LibraryManagementSystem\\reports\\MemberDataReport.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    Map<String, Object> params = new HashMap<>();
                    params.put("mem_id_main", id);
                    JasperPrint fillReport = JasperFillManager.fillReport(compileReport, params,
                            DBConnect.getCon());
                    JasperViewer.viewReport(fillReport, false);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Select a single member.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a member from the table first.");
        }
    }//GEN-LAST:event_lab_reportMouseClicked

    private void lab_reportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_reportMouseExited
        setImage(new File("pics/report_black.png"), lab_report);
    }//GEN-LAST:event_lab_reportMouseExited

    private void lab_reportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_reportMouseEntered
        setImage(new File("pics/report.png"), lab_report);
    }//GEN-LAST:event_lab_reportMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddViewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddViewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddViewMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddViewMember().setVisible(true);
            }
        });
    }

    private void setImage(File file, JLabel label) {
        try {
            Image image = ImageIO.read(new FileInputStream(file));
            image = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            label.setIcon(new ImageIcon(image));
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }

    private void searchMem() {
        String searchCategory = cb_searchCategory.getSelectedItem().toString();
        String searchString = txt_search.getText();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        jTable1.clearSelection();

        if (searchCategory.equals("ID")) {
            for (int row = 0; row < dtm.getRowCount(); row++) {
                if (dtm.getValueAt(row, 0).toString().contains(searchString)) {
                    jTable1.getSelectionModel().addSelectionInterval(row, row);

                }
            }
        } else if (searchCategory.equals("First Name")) {
            for (int row = 0; row < dtm.getRowCount(); row++) {
                if (dtm.getValueAt(row, 1).toString().contains(searchString)) {
                    jTable1.getSelectionModel().addSelectionInterval(row, row);

                }
            }
        } else if (searchCategory.equals("NIC")) {
            for (int row = 0; row < dtm.getRowCount(); row++) {
                if (dtm.getValueAt(row, 3).toString().contains(searchString)) {
                    jTable1.getSelectionModel().addSelectionInterval(row, row);

                }
            }
        } else if (searchCategory.equals("Mobile No.")) {
            for (int row = 0; row < dtm.getRowCount(); row++) {
                if (dtm.getValueAt(row, 4).toString().contains(searchString)) {
                    jTable1.getSelectionModel().addSelectionInterval(row, row);

                }
            }
        }

        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "No match found!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton but_add;
    public javax.swing.JButton but_addMem;
    private javax.swing.JButton but_add_back;
    private javax.swing.JButton but_back;
    private javax.swing.JButton but_update;
    private javax.swing.JButton but_viewUpdateMem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cb_searchCategory;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLayeredPane jLayeredPane6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lab_image;
    private javax.swing.JLabel lab_report;
    public javax.swing.JLayeredPane layer_addMem;
    private javax.swing.JLayeredPane layer_updateMem;
    public javax.swing.JLayeredPane layer_viewMem;
    private javax.swing.JRadioButton rb_active;
    private javax.swing.JRadioButton rb_add_active;
    private javax.swing.JRadioButton rb_add_female;
    private javax.swing.JRadioButton rb_add_inactive;
    private javax.swing.JRadioButton rb_add_male;
    private javax.swing.JRadioButton rb_female;
    private javax.swing.JRadioButton rb_inactive;
    private javax.swing.JRadioButton rb_male;
    private javax.swing.JTextField txt_add_city;
    private javax.swing.JTextField txt_add_fname;
    private javax.swing.JTextField txt_add_home;
    private javax.swing.JTextField txt_add_lname;
    private javax.swing.JTextField txt_add_mobile;
    private javax.swing.JTextField txt_add_nic;
    private javax.swing.JTextField txt_add_postal;
    private javax.swing.JTextField txt_add_street;
    private javax.swing.JTextField txt_add_zone;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_home;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_mobile;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JTextField txt_postal;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_street;
    private javax.swing.JTextField txt_zone;
    // End of variables declaration//GEN-END:variables

    private void loadTableData() {
        setColumnSizes();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        Vector v;
        try {
            ResultSet search = DBConnect.search("select * from member");
            while (search.next()) {
                v = new Vector();
                v.add(search.getInt("id"));
                v.add(search.getString("fname"));
                v.add(search.getString("lname"));

                v.add(search.getString("nic"));
                v.add(search.getString("phone"));
                String gender = (search.getString("gender").equalsIgnoreCase("M")) ? "Male" : "Female";
                v.add(gender);
                String stat = (search.getBoolean("stat")) ? "Active" : "Inactive";
                v.add(stat);
                dtm.addRow(v);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void UpdateMemberData() {
        if (updateCheckContents()) {
            String fname = txt_fname.getText().toLowerCase();
            String lname = txt_lname.getText().toLowerCase();
            String nic = txt_nic.getText().toLowerCase();
            String mobile = txt_mobile.getText();
            String home = txt_home.getText().toLowerCase();
            String street = txt_street.getText().toLowerCase();
            String zone = txt_zone.getText().toLowerCase();
            String city = txt_city.getText().toLowerCase();
            String postal = txt_postal.getText().toLowerCase();
            String gender = (rb_male.isSelected()) ? "M" : "F";
            int stat = (rb_active.isSelected()) ? 1 : 0;

            try {
                DBConnect.iud("update member set nic='" + nic + "',fname='" + fname + "',lname='" + lname + "'"
                        + ",gender='" + gender + "',phone='" + mobile + "'"
                        + ",home='" + home + "',street='" + street + "',zone='" + zone + "'"
                        + ",city='" + city + "',postalcode='" + postal + "',stat='" + stat + "' where id='" + id + "'");
                JOptionPane.showMessageDialog(rootPane, "Member Data Update Successful !");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    private void addMember() {
        if (addCheckContents()) {
            String fname = txt_add_fname.getText().toLowerCase();
            String lname = txt_add_lname.getText().toLowerCase();
            String nic = txt_add_nic.getText().toLowerCase();
            String mobile = txt_add_mobile.getText();
            String home = txt_add_home.getText().toLowerCase();
            String street = txt_add_street.getText().toLowerCase();
            String zone = txt_add_zone.getText().toLowerCase();
            String city = txt_add_city.getText().toLowerCase();
            String postal = txt_add_postal.getText().toLowerCase();
            String gender = (rb_add_male.isSelected()) ? "M" : "F";
            int stat = (rb_add_active.isSelected()) ? 1 : 0;

            try {
                String query = "INSERT INTO member(nic,fname,lname,gender,phone,home,street,zone,city,postalcode,stat) "
                        + "VALUES('" + nic + "','" + fname + "','" + lname + "','" + gender + "','" + mobile + "',"
                        + "'" + home + "','" + street + "','" + zone + "','" + city + "','" + postal + "','" + stat + "')";
                DBConnect.iud(query);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            addClearFields();
            JOptionPane.showMessageDialog(rootPane, "Member Added Successfully !");
        }
    }

    private boolean addCheckContents() {
        if (txt_add_fname.getText().trim().equals("")) {
            txt_add_fname.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_lname.getText().trim().equals("")) {
            txt_add_lname.grabFocus();
            allDoneAdd = false;
        } else if (!(rb_add_male.isSelected() || rb_add_female.isSelected())) {
            rb_add_male.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_nic.getText().trim().equals("") || !(txt_add_nic.getText().trim().length() == 10 || txt_add_nic.getText().trim().length() == 12)) {
            txt_nic.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_mobile.getText().trim().equals("") || txt_add_mobile.getText().trim().length() != 10) {
            txt_add_mobile.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_home.getText().trim().equals("")) {
            txt_add_home.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_street.getText().trim().equals("")) {
            txt_add_street.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_zone.getText().trim().equals("")) {
            txt_add_zone.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_city.getText().trim().equals("")) {
            txt_add_city.grabFocus();
            allDoneAdd = false;
        } else if (txt_add_postal.getText().trim().equals("") || txt_add_postal.getText().trim().length() > 5) {
            txt_add_postal.grabFocus();
            allDoneAdd = false;
        } else if (!(rb_add_active.isSelected() || rb_add_inactive.isSelected())) {
            rb_add_active.grabFocus();
            allDoneAdd = false;
        } else {
            allDoneAdd = true;
        }
        return allDoneAdd;
    }

    void setButtons() {
        jButton5.setOpaque(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setBorderPainted(false);
        jButton6.setOpaque(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setBorderPainted(false);
    }

    private boolean updateCheckContents() {
        if (txt_fname.getText().trim().equals("")) {
            txt_fname.grabFocus();
            allDoneUpdate = false;
        } else if (txt_lname.getText().trim().equals("")) {
            txt_lname.grabFocus();
            allDoneUpdate = false;
        } else if (!(rb_male.isSelected() || rb_female.isSelected())) {
            rb_male.grabFocus();
            allDoneUpdate = false;
        } else if (txt_nic.getText().trim().equals("") || !(txt_nic.getText().trim().length() == 10 || txt_nic.getText().trim().length() == 12)) {
            txt_nic.grabFocus();
            allDoneUpdate = false;
        } else if (txt_mobile.getText().trim().equals("") || txt_mobile.getText().trim().length() != 10) {
            txt_mobile.grabFocus();
            allDoneUpdate = false;
        } else if (txt_home.getText().trim().equals("")) {
            txt_home.grabFocus();
            allDoneUpdate = false;
        } else if (txt_street.getText().trim().equals("")) {
            txt_street.grabFocus();
            allDoneUpdate = false;
        } else if (txt_zone.getText().trim().equals("")) {
            txt_zone.grabFocus();
            allDoneUpdate = false;
        } else if (txt_city.getText().trim().equals("")) {
            txt_city.grabFocus();
            allDoneUpdate = false;
        } else if (txt_postal.getText().trim().equals("") || txt_postal.getText().trim().length() > 5) {
            txt_postal.grabFocus();
            allDoneUpdate = false;
        } else if (!(rb_active.isSelected() || rb_inactive.isSelected())) {
            rb_active.grabFocus();
            allDoneUpdate = false;
        } else {
            allDoneUpdate = true;
        }
        return allDoneUpdate;
    }

    private void addClearFields() {
        txt_add_fname.setText(null);
        txt_add_lname.setText(null);
        txt_add_nic.setText(null);
        txt_add_home.setText(null);
        txt_add_street.setText(null);
        txt_add_zone.setText(null);
        txt_add_city.setText(null);
        txt_add_postal.setText(null);
        txt_add_mobile.setText(null);
        rb_add_male.setSelected(true);
        rb_add_active.setSelected(true);
    }

    private void setColumnSizes() {
        //jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);

        jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(JLabel.CENTER);
        jTable1.getColumnModel().getColumn(0).setCellRenderer(renderer);

//        jTable1.getColumnModel().getColumn(5).setMaxWidth(60);
//        jTable1.getColumnModel().getColumn(6).setMaxWidth(60);
    }
}
