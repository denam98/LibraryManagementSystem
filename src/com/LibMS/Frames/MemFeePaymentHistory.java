/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.LibMS.Frames;

import com.LibMS.Common.DBConnect;
import com.LibMS.Common.SystemLogger;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author B.M.D.C.Bandara
 */
public class MemFeePaymentHistory extends javax.swing.JFrame {

    /**
     * Creates new form MemFeePaymentHistory
     */
    public MemFeePaymentHistory() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(MemFeePaymentHistory.class).error("Exception from class constructor", ex);
        }
        initComponents();
        setLocationRelativeTo(null);
        jLabel3.grabFocus();
        loadTableData();
        setButtons();
        setImage(new File("pics/feeHistory.jpg"), lab_image);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lab_image = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        cb_searchCategory = new javax.swing.JComboBox<>();
        txt_search = new javax.swing.JTextField();
        but_addMem = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Fee History");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 240, 50));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Member");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 190, 50));
        getContentPane().add(lab_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 768));

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setOpaque(true);
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PAYMENT ID", "MEMBER ID", "FIRST NAME", "LAST NAME", "NIC", "AMOUNT", "DATE PAID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);

        jLayeredPane1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 920, 390));

        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 255));
        jButton5.setText("Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 10, -1, -1));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jLayeredPane1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 10, 35));

        jButton6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 153, 153));
        jButton6.setText("Member");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 90, -1));

        cb_searchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "First Name", "Last Name", "NIC" }));
        jLayeredPane1.add(cb_searchCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, 70, 30));

        txt_search.setText("Search");
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_searchFocusLost(evt);
            }
        });
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        jLayeredPane1.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 170, 180, 30));

        but_addMem.setBackground(new java.awt.Color(255, 255, 255));
        but_addMem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_addMem.setText("Outdated Payments");
        but_addMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addMemActionPerformed(evt);
            }
        });
        jLayeredPane1.add(but_addMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 185, 41));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton4.setText("Accept Member Fee");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 640, 230, 42));

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 966, 768));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        txt_search.setText(null);
    }//GEN-LAST:event_txt_searchFocusGained

    private void txt_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusLost
        txt_search.setText("Search");
    }//GEN-LAST:event_txt_searchFocusLost

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        searchMem();
    }//GEN-LAST:event_txt_searchActionPerformed

    private void but_addMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addMemActionPerformed
        new OutdatedMemFee().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_but_addMemActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new MemberFee().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(MemFeePaymentHistory.class).error("Exception from main() method", ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MemFeePaymentHistory().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton but_addMem;
    private javax.swing.JComboBox<String> cb_searchCategory;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lab_image;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

    private void loadTableData() {
        try {
            ResultSet search = DBConnect.search("Select mf.*,m.* from member_fee mf left join member m on mf.member_id=m.id");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            Vector v;
            while (search.next()) {
                v = new Vector();
                v.add(search.getString("id"));
                v.add(search.getString("member_id"));
                v.add(search.getString("fname"));
                v.add(search.getString("lname"));
                v.add(search.getString("nic"));
                v.add(search.getString("amount"));
                v.add(search.getString("date_paid"));
                dtm.addRow(v);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(MemFeePaymentHistory.class).error("Exception from SELECT query", ex);
        }
    }
    
    void setButtons() {
        jButton5.setOpaque(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setBorderPainted(false);
        jButton6.setOpaque(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setBorderPainted(false);
    }
    
    private void setImage(File imgFile, JLabel labelName) {
        try {
            Image image = ImageIO.read(new FileInputStream(imgFile));
            image = image.getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_SMOOTH);
            labelName.setIcon(new ImageIcon(image));
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }
    
    private void searchMem() {
        String searchCategory = cb_searchCategory.getSelectedItem().toString();
        String searchString = txt_search.getText();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        jTable1.clearSelection();

        switch (searchCategory) {
            case "ID":
                for (int row = 1; row < dtm.getRowCount(); row++) {
                    if (dtm.getValueAt(row, 1).toString().contains(searchString)) {
                        jTable1.getSelectionModel().addSelectionInterval(row, row);
                        
                    }
                }   break;
            case "First Name":
                for (int row = 2; row < dtm.getRowCount(); row++) {
                    if (dtm.getValueAt(row, 2).toString().contains(searchString)) {
                        jTable1.getSelectionModel().addSelectionInterval(row, row);
                        
                    }
                }   break;
            case "Last Name":
                for (int row = 3; row < dtm.getRowCount(); row++) {
                    if (dtm.getValueAt(row, 3).toString().contains(searchString)) {
                        jTable1.getSelectionModel().addSelectionInterval(row, row);
                        
                    }
                }   break;
            case "NIC":
                for (int row = 4; row < dtm.getRowCount(); row++) {
                    if (dtm.getValueAt(row, 4).toString().contains(searchString)) {
                        jTable1.getSelectionModel().addSelectionInterval(row, row);
                        
                    }
                }   break;
            default:
                break;
        }

        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "No match found!");
        }
    }
    
}
