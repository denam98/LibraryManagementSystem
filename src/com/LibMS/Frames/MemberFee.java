/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.LibMS.Frames;

import com.LibMS.Common.DBConnect;
import com.LibMS.Common.SystemData;
import com.LibMS.Common.SystemLogger;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.joda.time.LocalDate;

/**
 *
 * @author B.M.D.C.Bandara
 */
public class MemberFee extends javax.swing.JFrame {

    /**
     * Creates new form MemberFee
     */
    public MemberFee() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(MemberFee.class).error("Exception from class constructor", ex);
        }
        initComponents();
        setLocationRelativeTo(null);
        setButtons();
        setImage(new File("pics/Annual_Fee.jpg"), lab_image);
        jScrollPane1.setVisible(false);
        txt_memid.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lab_image = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel4 = new javax.swing.JLabel();
        txt_memid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        txt_name = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jLabel8 = new javax.swing.JLabel();
        txt_fee = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_paid = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_balance = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setOpaque(true);
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Member Fee");
        jLayeredPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 240, 50));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Accept");
        jLayeredPane1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 190, 50));
        jLayeredPane1.add(lab_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 768));

        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Member ID");
        jLayeredPane2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 133, 28));

        txt_memid.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_memid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_memidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_memidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_memidKeyTyped(evt);
            }
        });
        jLayeredPane2.add(txt_memid, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 300, -1));

        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLayeredPane2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 300, -1));

        txt_name.setEditable(false);
        txt_name.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nameKeyTyped(evt);
            }
        });
        jLayeredPane2.add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 300, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Member Name");
        jLayeredPane2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 133, 28));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Member NIC");
        jLayeredPane2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 133, 28));

        txt_nic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nicKeyPressed(evt);
            }
        });
        jLayeredPane2.add(txt_nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 300, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("For the Year");
        jLayeredPane2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 133, 28));

        jYearChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jYearChooser1KeyPressed(evt);
            }
        });
        jLayeredPane2.add(jYearChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, 96, 28));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Member Fee per Annum");
        jLayeredPane2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 170, 28));

        txt_fee.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_fee.setText("2000.00");
        txt_fee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_feeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_feeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_feeKeyTyped(evt);
            }
        });
        jLayeredPane2.add(txt_fee, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, 300, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Paid");
        jLayeredPane2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 40, 28));

        txt_paid.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_paid.setText("0.00");
        txt_paid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_paidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_paidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_paidKeyTyped(evt);
            }
        });
        jLayeredPane2.add(txt_paid, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 210, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Balance");
        jLayeredPane2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 60, 28));

        txt_balance.setEditable(false);
        txt_balance.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_balance.setText("0.00");
        txt_balance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_balanceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_balanceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_balanceKeyTyped(evt);
            }
        });
        jLayeredPane2.add(txt_balance, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 470, 210, -1));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton4.setText("Accept Payment");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jLayeredPane2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 640, 230, 42));

        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 255));
        jButton5.setText("Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jLayeredPane2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, -1, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jLayeredPane2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, 10, 35));

        jButton6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 153, 153));
        jButton6.setText("Employee");
        jButton6.setEnabled(false);
        jLayeredPane2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, -1, -1));

        jLayeredPane1.add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 966, 768));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_memidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_memidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_memid.getText().trim().equals("")) {
            jScrollPane1.setVisible(false);
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN && jList1.getFirstVisibleIndex() != -1) {
            jList1.grabFocus();
            jList1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_txt_memidKeyPressed

    private void txt_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_name.getText().trim().equals("")) {
            txt_nic.grabFocus();
        }
    }//GEN-LAST:event_txt_nameKeyPressed

    private void txt_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_nameKeyTyped

    private void txt_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyPressed
        if (Character.isDigit(evt.getKeyChar()) || (evt.getKeyCode() == KeyEvent.VK_V && !txt_nic.getText().contains("v")) || evt.getKeyCode() == KeyEvent.VK_ENTER
                || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            txt_nic.setEditable(true);
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                ResultSet search;
                try {
                    search = DBConnect.search("select * from member where nic='" + txt_nic.getText() + "'");
                    if (search.next()) {
                        txt_memid.setText(search.getString("id"));
                        txt_name.setText(search.getString("fname") + " " + search.getString("lname"));
                        jYearChooser1.grabFocus();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "No such member.");
                        txt_name.setText(null);
                        txt_memid.setText(null);
                        txt_nic.setText(null);
                        txt_nic.grabFocus();
                    }
                } catch (HeadlessException | ClassNotFoundException | SQLException ex) {
                    SystemLogger.initLogger(MemberFee.class).error("Exception from SELECT querty", ex);
                }
            }
        } else {
            txt_nic.setEditable(false);
        }
    }//GEN-LAST:event_txt_nicKeyPressed

    private void txt_memidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_memidKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_memidKeyTyped

    private void txt_memidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_memidKeyReleased
        jScrollPane1.setVisible(true);
        try {
            ResultSet search = DBConnect.search("select * from member where id like '" + txt_memid.getText().trim() + "%'");
            jList1.removeAll();
            Vector v = new Vector();
            while (search.next()) {
                v.add(search.getString("id") + " - " + search.getString("fname") + " " + search.getString("lname"));
            }
            jList1.setListData(v);
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(MemberFee.class).error("Exception from SELECT query", ex);
        }
    }//GEN-LAST:event_txt_memidKeyReleased

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String id = jList1.getSelectedValue().split(" - ")[0].trim();
            txt_memid.setText(id);
            txt_name.setText(jList1.getSelectedValue().split(" - ")[1]);
            try {
                ResultSet search = DBConnect.search("select nic from member where id='" + id + "'");
                if (search.first()) {
                    txt_nic.setText(search.getString("nic"));
                }
            } catch (ClassNotFoundException | SQLException ex) {
                SystemLogger.initLogger(MemberFee.class).error("Exception from select query", ex);
            }
            jScrollPane1.setVisible(false);
            jYearChooser1.grabFocus();
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txt_feeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_feeKeyPressed
        if (Character.isDigit(evt.getKeyChar()) || (evt.getKeyChar() == KeyEvent.VK_PERIOD && !txt_fee.getText().contains(".")) || evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_BACK_SPACE) {
            txt_fee.setEditable(true);
            if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_fee.getText().trim().equals("") && Double.parseDouble(txt_fee.getText().trim()) != 0) {
                txt_paid.grabFocus();
            }
        } else {
            txt_fee.setEditable(false);
        }
    }//GEN-LAST:event_txt_feeKeyPressed

    private void txt_feeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_feeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_feeKeyReleased

    private void txt_feeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_feeKeyTyped

    }//GEN-LAST:event_txt_feeKeyTyped

    private void txt_paidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paidKeyPressed
        if (Character.isDigit(evt.getKeyChar()) || (evt.getKeyChar() == KeyEvent.VK_PERIOD && !txt_paid.getText().contains(".")) || evt.getKeyChar() == KeyEvent.VK_ENTER || evt.getKeyChar() == KeyEvent.VK_BACK_SPACE) {
            txt_paid.setEditable(true);
            if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txt_paid.getText().trim().equals("") && Double.parseDouble(txt_paid.getText().trim()) != 0) {
                double fee = Double.parseDouble(txt_fee.getText().trim());
                double paid = Double.parseDouble(txt_paid.getText().trim());
                if (paid < fee) {
                    JOptionPane.showMessageDialog(rootPane, "Not Sufficient.");
                    txt_paid.setText(null);
                    txt_paid.grabFocus();
                } else {
                    txt_balance.setText(String.valueOf(paid - fee));
                    jButton4.grabFocus();
                }
            }
        } else {
            txt_paid.setEditable(false);
        }
    }//GEN-LAST:event_txt_paidKeyPressed

    private void txt_paidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paidKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_paidKeyReleased

    private void txt_paidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paidKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_paidKeyTyped

    private void txt_balanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_balanceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_balanceKeyPressed

    private void txt_balanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_balanceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_balanceKeyReleased

    private void txt_balanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_balanceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_balanceKeyTyped

    private void jYearChooser1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jYearChooser1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_fee.grabFocus();
        }
    }//GEN-LAST:event_jYearChooser1KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (checkContents()) {
            try {
                ResultSet search = DBConnect.search("select * from member_fee where member_id='" + txt_memid.getText() + "'");
                if (search.last()) {
                    if (jYearChooser1.getYear() <= search.getInt("year")) {
                        int showConfirmDialog = JOptionPane.showConfirmDialog(rootPane, "Already paid for this year.Pay for the next year?", "",
                                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if(showConfirmDialog == JOptionPane.YES_OPTION){
                            jYearChooser1.setYear(LocalDate.now().getYear() + 1);
                        } else {
                            clearFields();
                        }
                    } else {
                        DBConnect.iud("insert into member_fee(member_id, year, amount, date_paid, sysuser_id) values('"
                                + txt_memid.getText() + "','" + jYearChooser1.getYear() + "','" + txt_fee.getText() 
                                + "',NOW()," + SystemData.getSysUserId() + ")");
                        JOptionPane.showMessageDialog(rootPane, "Successful!");
                        clearFields();
                    }
                } else {
                    DBConnect.iud("insert into member_fee(member_id, year, amount, date_paid, sysuser_id) values('"
                                + txt_memid.getText() + "','" + jYearChooser1.getYear() + "','" + txt_fee.getText() 
                                + "',NOW(),'" + SystemData.getSysUserId() + "')");
                    JOptionPane.showMessageDialog(rootPane, "Successful!");
                    clearFields();
                }
            } catch (HeadlessException | ClassNotFoundException | SQLException ex) {
                SystemLogger.initLogger(MemberFee.class).error("", ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error! Re-check all the fields.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(MemberFee.class).error("Exception from main() method", ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MemberFee().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JLabel lab_image;
    private javax.swing.JTextField txt_balance;
    private javax.swing.JTextField txt_fee;
    private javax.swing.JTextField txt_memid;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JTextField txt_paid;
    // End of variables declaration//GEN-END:variables

    private void setImage(File imgFile, JLabel labelName) {
        try {
            Image image = ImageIO.read(new FileInputStream(imgFile));
            image = image.getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_SMOOTH);
            labelName.setIcon(new ImageIcon(image));
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }

    private boolean checkContents() {
        boolean status = false;
        try {
            ResultSet search = DBConnect.search("select * from member where id='" + txt_memid.getText() + "' and fname='" + txt_name.getText().split(" ")[0] + "' "
                    + "and lname='" + txt_name.getText().split(" ")[1] + "' and nic='" + txt_nic.getText() + "'");
            status = search.next();
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(MemberFee.class).error("", ex);
        }
        return status;
    }

    private void clearFields() {
        txt_memid.setText(null);
        txt_name.setText(null);
        txt_nic.setText(null);
        txt_fee.setText("2000.00");
        txt_paid.setText("0.00");
        txt_balance.setText("0.00");
        txt_memid.grabFocus();
    }

    void setButtons() {
        jButton5.setOpaque(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setBorderPainted(false);
        jButton6.setOpaque(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setBorderPainted(false);
    }
    
}
