/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.LibMS.Frames;

import com.LibMS.Common.DBConnect;
import com.LibMS.Common.SystemLogger;
import com.sun.glass.events.KeyEvent;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author B.M.D.C.Bandara
 */
public class AddViewBooks extends javax.swing.JFrame {

    /**
     * Creates new form AddBook
     */
    public AddViewBooks() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(AddViewBooks.class).error("Exception from class constructor", ex);
        }
        initComponents();
        setLocationRelativeTo(null);
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        layer_addBook.setVisible(false);
        jLabel1.setText("View Books");
        setImage();
        loadDataToTable();
        setButtons();
        jButton3.grabFocus();
    }

    String category;
    String author;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        lab_image = new javax.swing.JLabel();
        layer_viewBook = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        cb_searchCategory = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        layer_addBook = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        txt_isbn = new javax.swing.JTextField();
        txt_author = new javax.swing.JTextField();
        txt_category = new javax.swing.JTextField();
        txt_initQty = new javax.swing.JTextField();
        rb_sinhala = new javax.swing.JCheckBox();
        rb_english = new javax.swing.JCheckBox();
        rb_tamil = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book Management Window");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 1, true));
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Add Books");
        jLayeredPane2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 250, 50));
        jLayeredPane2.add(lab_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 768));

        layer_viewBook.setBackground(new java.awt.Color(255, 255, 255));
        layer_viewBook.setOpaque(true);
        layer_viewBook.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "NAME", "AUTHOR", "CATEGORY", "LANGUAGE", "INITIAL QTY", "AVAILABLE QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane3.setViewportView(jTable1);

        layer_viewBook.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 920, 390));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton3.setText("Add Book");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        layer_viewBook.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 185, 41));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton4.setText("Lend Book");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        layer_viewBook.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 640, 230, 42));

        txt_search.setText("Search");
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_searchFocusLost(evt);
            }
        });
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        layer_viewBook.add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 170, 180, 30));

        cb_searchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ISBN", "Name" }));
        layer_viewBook.add(cb_searchCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, 70, 30));

        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 255));
        jButton5.setText("Home");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        layer_viewBook.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, -1, -1));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        layer_viewBook.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 10, 35));

        jButton6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 153, 153));
        jButton6.setText("Books");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        layer_viewBook.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 10, -1, -1));

        jLayeredPane2.add(layer_viewBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 966, 768));

        layer_addBook.setBackground(new java.awt.Color(255, 255, 255));
        layer_addBook.setOpaque(true);
        layer_addBook.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        layer_addBook.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 300, -1));

        jList1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        layer_addBook.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 320, 300, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Book Name");
        layer_addBook.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 133, 28));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("ISBN Number");
        layer_addBook.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 133, 28));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Author Name");
        layer_addBook.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 133, 28));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Category");
        layer_addBook.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 133, 28));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Language");
        layer_addBook.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 133, 28));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Init Qty");
        layer_addBook.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 450, 133, 28));

        txt_name.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
        });
        layer_addBook.add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 300, -1));

        txt_isbn.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_isbn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_isbnKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_isbnKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_isbnKeyTyped(evt);
            }
        });
        layer_addBook.add(txt_isbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 300, -1));

        txt_author.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_author.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_authorMouseClicked(evt);
            }
        });
        txt_author.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_authorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_authorKeyReleased(evt);
            }
        });
        layer_addBook.add(txt_author, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, 300, -1));

        txt_category.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_categoryMouseClicked(evt);
            }
        });
        txt_category.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_categoryKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_categoryKeyReleased(evt);
            }
        });
        layer_addBook.add(txt_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, 300, -1));

        txt_initQty.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_initQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_initQtyKeyPressed(evt);
            }
        });
        layer_addBook.add(txt_initQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 450, 300, -1));

        rb_sinhala.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_sinhala);
        rb_sinhala.setText("Sinhala");
        rb_sinhala.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_sinhalaKeyPressed(evt);
            }
        });
        layer_addBook.add(rb_sinhala, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, -1, -1));

        rb_english.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_english);
        rb_english.setText("English");
        rb_english.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_englishKeyPressed(evt);
            }
        });
        layer_addBook.add(rb_english, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        rb_tamil.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_tamil);
        rb_tamil.setText("Tamil");
        rb_tamil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_tamilKeyPressed(evt);
            }
        });
        layer_addBook.add(rb_tamil, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, -1, -1));

        jButton1.setBackground(new java.awt.Color(51, 123, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setText("ADD");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        layer_addBook.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 540, 120, 40));

        jButton2.setBackground(new java.awt.Color(51, 123, 255));
        jButton2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton2.setText("Back");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        layer_addBook.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 540, 150, 40));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        layer_addBook.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 540, 10, 40));

        jLayeredPane2.add(layer_addBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 966, 768));

        getContentPane().add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 768));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_authorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_authorMouseClicked
        jScrollPane1.setVisible(true);
    }//GEN-LAST:event_txt_authorMouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jScrollPane1.setVisible(false);
            author = jList1.getSelectedValue();
            txt_author.setText(author);
            txt_category.grabFocus();
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txt_categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_categoryMouseClicked
        jScrollPane2.setVisible(true);
    }//GEN-LAST:event_txt_categoryMouseClicked

    private void jList2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jScrollPane2.setVisible(false);
            category = jList2.getSelectedValue();
            txt_category.setText(category);
            rb_sinhala.grabFocus();
        }
    }//GEN-LAST:event_jList2KeyPressed

    private void txt_categoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_categoryKeyReleased
        searchCategories();
    }//GEN-LAST:event_txt_categoryKeyReleased

    private void txt_categoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_categoryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList2.grabFocus();
            jList2.setSelectedIndex(0);
        } else {
            jScrollPane2.setVisible(true);
        }
    }//GEN-LAST:event_txt_categoryKeyPressed

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        if (evt.getClickCount() == 2) {
            jScrollPane2.setVisible(false);
            category = jList2.getSelectedValue();
            txt_category.setText(category);
            rb_sinhala.grabFocus();
        }
    }//GEN-LAST:event_jList2MouseClicked

    private void txt_authorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_authorKeyReleased
        searchAuthor();
    }//GEN-LAST:event_txt_authorKeyReleased

    private void txt_authorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_authorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN && jList1.getModel().getSize() == 0) {
            addAuthor();
            txt_category.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN && jList1.getModel().getSize() != 0) {
            jList1.grabFocus();
            jList1.setSelectedIndex(0);
        } else {
            jScrollPane1.setVisible(true);
        }
    }//GEN-LAST:event_txt_authorKeyPressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
            jScrollPane1.setVisible(false);
            author = jList1.getSelectedValue();
            txt_author.setText(author);
            txt_category.grabFocus();
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void rb_sinhalaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_sinhalaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (rb_sinhala.isSelected()) {
                rb_sinhala.setSelected(false);
            } else {
                rb_sinhala.setSelected(true);
                txt_initQty.grabFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_english.grabFocus();
        }
    }//GEN-LAST:event_rb_sinhalaKeyPressed

    private void rb_englishKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_englishKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (rb_english.isSelected()) {
                rb_english.setSelected(false);
            } else {
                rb_english.setSelected(true);
                txt_initQty.grabFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_tamil.grabFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_sinhala.grabFocus();
        }
    }//GEN-LAST:event_rb_englishKeyPressed

    private void rb_tamilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_tamilKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (rb_tamil.isSelected()) {
                rb_tamil.setSelected(false);
            } else {
                rb_tamil.setSelected(true);
                txt_initQty.grabFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_english.grabFocus();
        }
    }//GEN-LAST:event_rb_tamilKeyPressed

    private void txt_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_name.getText().trim().equals("") || txt_name.getText() != null) {
                txt_isbn.grabFocus();
            }
        }
    }//GEN-LAST:event_txt_nameKeyPressed

    private void txt_isbnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_isbnKeyPressed
        if ((evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105) || (evt.getKeyCode() >= 48
                && evt.getKeyCode() <= 57) || evt.getKeyCode() == KeyEvent.VK_BACKSPACE
                || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_isbn.setEditable(true);

            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                if (!txt_isbn.getText().trim().equals("") || txt_isbn.getText() != null) {
                    txt_author.grabFocus();
                }
            }
        } else {
            txt_isbn.setEditable(false);
        }
    }//GEN-LAST:event_txt_isbnKeyPressed

    private void txt_initQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_initQtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txt_initQty.getText().trim().equals("") || txt_initQty.getText() != null) {
                jButton1.grabFocus();
            }
        }
    }//GEN-LAST:event_txt_initQtyKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addBookData();
        clearFields();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1.doClick();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void txt_isbnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_isbnKeyTyped
//        if (txt_isbn.getText().length() >= 13) {
//            if ((evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105) || (evt.getKeyCode() >= 48
//                    && evt.getKeyCode() <= 57)) {
//                txt_isbn.setEditable(false);
//            } else {
//                txt_isbn.setEditable(true);
//            }
//        }
//        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_txt_isbnKeyTyped

    private void txt_isbnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_isbnKeyReleased
//        if (txt_isbn.getText().length() >= 13) {
//            if ((evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105) || (evt.getKeyCode() >= 48
//                    && evt.getKeyCode() <= 57)) {
//                txt_isbn.setEditable(false);
//            } else {
//                txt_isbn.setEditable(true);
//            }
//        }
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_txt_isbnKeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        layer_viewBook.setVisible(false);
        layer_addBook.setVisible(true);
        jLabel1.setText("Add Books");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new AddViewBooks().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

        if (jTable1.getSelectedRow() != -1 && jTable1.getSelectedRowCount() == 1) {
            if (Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString()) != 0) {
                String selectedBookIsbn = dtm.getValueAt(jTable1.getSelectedRow(), 0).toString();
                LendBook lb = new LendBook();
                lb.txt_isbn.setText(selectedBookIsbn);
                lb.txt_memNIC.grabFocus();
                lb.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Currently out of stock.", "", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a book first from the table.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txt_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusLost
        txt_search.setText("Search");
    }//GEN-LAST:event_txt_searchFocusLost

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        txt_search.setText(null);
    }//GEN-LAST:event_txt_searchFocusGained

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        searchBook();
    }//GEN-LAST:event_txt_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddViewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddViewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddViewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddViewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AddViewBooks().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_searchCategory;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lab_image;
    private javax.swing.JLayeredPane layer_addBook;
    private javax.swing.JLayeredPane layer_viewBook;
    private javax.swing.JCheckBox rb_english;
    private javax.swing.JCheckBox rb_sinhala;
    private javax.swing.JCheckBox rb_tamil;
    private javax.swing.JTextField txt_author;
    private javax.swing.JTextField txt_category;
    private javax.swing.JTextField txt_initQty;
    private javax.swing.JTextField txt_isbn;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

    private void searchCategories() {
        String searchingTxt = "%" + txt_category.getText().trim().toLowerCase() + "%";
        String sql = "select * from category where categoryname like '" + searchingTxt + "'";
        Vector v = new Vector();
        jList2.setModel(new DefaultListModel());
        try {
            ResultSet search = DBConnect.search(sql);
            while (search.next()) {
                v.add(search.getString("categoryname"));
            }
            jList2.setListData(v);
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(AddViewBooks.class).error("Exception from SELECT query", ex);
        }
    }

    private void searchAuthor() {
        String searchTxt = "%" + txt_author.getText().toLowerCase() + "%";
        String sql = "select * from author where name like '" + searchTxt + "'";
        Vector v = new Vector();
        jList1.setModel(new DefaultListModel());
        try {
            ResultSet search = DBConnect.search(sql);
            while (search.next()) {
                v.add(search.getString("name"));
            }
            jList1.setListData(v);
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(AddEmployee.class).error("Exception from SELECT query", ex);
        }
    }

    private void addAuthor() {
        String authorName = JOptionPane.showInputDialog(rootPane, "Author "
                + "does not exist.\nEnter first name and last name to add as a new author.",
                "Add New Author", JOptionPane.INFORMATION_MESSAGE).toLowerCase();
        String sql = "insert into author(name) values('" + authorName + "')";
        try {
            DBConnect.iud(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(AddViewBooks.class).error("Exception from Insert query", ex);
        }
        txt_author.setText(authorName);
    }

    private void addBookData() {
        try {
            String isbn = txt_isbn.getText().trim();
            String name = txt_name.getText().toLowerCase();
            int initQty = Integer.parseInt(txt_initQty.getText());
            String lang = null;
            if (rb_sinhala.isSelected()) {
                lang = "sinhala";
            }

            if (rb_english.isSelected()) {
                lang = "english";
            }

            if (rb_tamil.isSelected()) {
                lang = "tamil";
            }

            System.out.println(author);
            ResultSet search = DBConnect.search("select * from author where name='" + author + "'");
            int authorId = 0;
            if (search.next()) {
                authorId = search.getInt("id");
            }

            System.out.println(category);
            ResultSet search1 = DBConnect.search("select * from category where categoryname='" + category + "'");
            int categoryId = 0;
            if (search1.next()) {
                categoryId = search1.getInt("id");
            }

            String insertSql = "insert into book(isbn,author_id,category_id,name,language,initqty,availableqty) "
                    + "values('" + isbn + "','" + authorId + "','" + categoryId + "','" + name + "','" + lang + "','" + initQty + "','" + initQty + "')";

            DBConnect.iud(insertSql);
            JOptionPane.showMessageDialog(rootPane, "Successfull !", "Data Insertion Status", JOptionPane.INFORMATION_MESSAGE);
        } catch (HeadlessException | ClassNotFoundException | NumberFormatException | SQLException ex) {
            SystemLogger.initLogger(AddViewBooks.class).error("", ex);
        }
    }

    private void clearFields() {
        txt_name.setText(null);
        txt_isbn.setText(null);
        txt_author.setText(null);
        txt_category.setText(null);
        txt_initQty.setText(null);
        buttonGroup1.clearSelection();
    }

    private void setImage() {
        try {
            String path = "pics/bookPile.jpg";
            Image image = ImageIO.read(new FileInputStream(path));
            image = image.getScaledInstance(lab_image.getWidth(), lab_image.getHeight(), Image.SCALE_SMOOTH);
            lab_image.setIcon(new ImageIcon(image));
        } catch (IOException ex) {
            SystemLogger.initLogger(AddViewBooks.class).error("Exception from setImage()", ex);
        }
    }

    private void loadDataToTable() {
        try {
            ResultSet search = DBConnect.search("select b.*,a.name as a_name,c.categoryname from book b left join "
                    + "author a on b.author_id=a.id left join category c on b.category_id=c.id");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            while (search.next()) {
                Vector v = new Vector();
                v.add(search.getString("isbn"));
                v.add(search.getString("name"));
                v.add(search.getString("a_name"));
                v.add(search.getString("categoryname"));
                v.add(search.getString("language"));
                v.add(search.getString("initqty"));
                v.add(search.getString("availableqty"));
                dtm.addRow(v);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            SystemLogger.initLogger(AddViewBooks.class).error("Exception from SELECT query", ex);
        }
    }

    void setButtons() {
        jButton5.setOpaque(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setBorderPainted(false);
        jButton6.setOpaque(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setBorderPainted(false);
    }

    private void searchBook() {
        String searchCategory = cb_searchCategory.getSelectedItem().toString();
        String searchString = txt_search.getText();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        jTable1.clearSelection();

        if (searchCategory.equals("ISBN")) {
            for (int row = 0; row < dtm.getRowCount(); row++) {
                if (dtm.getValueAt(row, 0).toString().contains(searchString)) {
                    jTable1.getSelectionModel().addSelectionInterval(row, row);

                }
            }
        } else {
            for (int row = 0; row < dtm.getRowCount(); row++) {
                if (dtm.getValueAt(row, 1).toString().contains(searchString)) {
                    jTable1.getSelectionModel().addSelectionInterval(row, row);

                }
            }
        }

        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "No match found!");
        }
    }
}
