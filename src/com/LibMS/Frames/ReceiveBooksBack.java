/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.LibMS.Frames;

import com.LibMS.Common.DBConnect;
import com.LibMS.Common.SystemLogger;
import com.sun.glass.events.KeyEvent;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author B.M.D.C.Bandara
 */
public class ReceiveBooksBack extends javax.swing.JFrame {

    String member;
    String memNic;
    int selectedRow;

    /**
     * Creates new form ReceiveBooksBack
     */
    public ReceiveBooksBack() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(ReceiveBooksBack.class).error("Exception from class constructor", ex);
        }
        initComponents();
        setImage(new File("pics/receiveBack.jpg"), lab_image);
        setButtons();
        txt_name.grabFocus();
        setLocationRelativeTo(null);
        jScrollPane3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lab_image = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_ID = new javax.swing.JTextField();
        lab_errorNic = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_isbn = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_book_name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_fines = new javax.swing.JTextField();
        txt_fines1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        but_receive = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);

        jLayeredPane1.setMaximumSize(new java.awt.Dimension(1366, 678));
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(1366, 768));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Receive");
        jLayeredPane1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 35, 260, 40));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Books Back");
        jLayeredPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 260, 40));
        jLayeredPane1.add(lab_image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 768));

        jLayeredPane2.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane2.setMaximumSize(new java.awt.Dimension(966, 768));
        jLayeredPane2.setMinimumSize(new java.awt.Dimension(966, 768));
        jLayeredPane2.setOpaque(true);
        jLayeredPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jLayeredPane2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 300, -1));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LEND ID", "ISBN", "BOOK NAME", "LEND DATE", "DUE DATE", "PASSED DAYS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jTable1.setRowMargin(2);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLayeredPane2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 580, 170));

        txt_name.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });
        txt_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nameKeyReleased(evt);
            }
        });
        jLayeredPane2.add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 300, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Member Name");
        jLayeredPane2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 133, 28));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Member NIC");
        jLayeredPane2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 133, 28));

        txt_ID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IDActionPerformed(evt);
            }
        });
        txt_ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_IDKeyPressed(evt);
            }
        });
        jLayeredPane2.add(txt_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, 300, -1));

        lab_errorNic.setForeground(new java.awt.Color(255, 102, 102));
        jLayeredPane2.add(lab_errorNic, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, 250, 20));

        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 102, 255));
        jButton5.setText("Home");
        jButton5.setBorderPainted(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jLayeredPane2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, -1, -1));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jLayeredPane2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, 10, 35));

        jButton6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(153, 153, 153));
        jButton6.setText("Receive Back");
        jButton6.setBorderPainted(false);
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jLayeredPane2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(834, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Book ISBN");
        jLayeredPane2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 133, 28));

        txt_isbn.setEditable(false);
        txt_isbn.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_isbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_isbnActionPerformed(evt);
            }
        });
        txt_isbn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_isbnKeyPressed(evt);
            }
        });
        jLayeredPane2.add(txt_isbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 300, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Book Name");
        jLayeredPane2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 133, 28));

        txt_book_name.setEditable(false);
        txt_book_name.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_book_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_book_nameActionPerformed(evt);
            }
        });
        txt_book_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_book_nameKeyPressed(evt);
            }
        });
        jLayeredPane2.add(txt_book_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, 300, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Fines per Day");
        jLayeredPane2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 110, 28));

        txt_fines.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_fines.setText("10.00");
        txt_fines.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_finesFocusGained(evt);
            }
        });
        txt_fines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_finesActionPerformed(evt);
            }
        });
        txt_fines.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_finesKeyTyped(evt);
            }
        });
        jLayeredPane2.add(txt_fines, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 540, 160, -1));

        txt_fines1.setEditable(false);
        txt_fines1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_fines1.setText("0");
        txt_fines1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fines1ActionPerformed(evt);
            }
        });
        txt_fines1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fines1KeyPressed(evt);
            }
        });
        jLayeredPane2.add(txt_fines1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 540, 160, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Total Fine amount");
        jLayeredPane2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 540, -1, 28));

        but_receive.setBackground(new java.awt.Color(51, 123, 255));
        but_receive.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        but_receive.setText("Receive");
        but_receive.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        but_receive.setOpaque(false);
        but_receive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_receiveActionPerformed(evt);
            }
        });
        but_receive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_receiveKeyPressed(evt);
            }
        });
        jLayeredPane2.add(but_receive, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 630, 170, 40));

        jLayeredPane1.add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 966, 768));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IDActionPerformed
        if ((!txt_ID.getText().contains("v") && txt_ID.getText().length() == 12)
                || (txt_ID.getText().contains("v") && txt_ID.getText().length() == 10)) {
            int memId;
            try {
                ResultSet search = DBConnect.search("select * from member where nic='" + txt_ID.getText() + "'");
                if (search.first()) {
                    memId = search.getInt("id");
                    ResultSet search1 = DBConnect.search("select * from lendbook l where member_id='" + memId + "' and l.stat!=0");
                    if (!search1.first()) {
                        lab_errorNic.setText("* No pending resubmissions for this member");
                        txt_ID.setText(null);
                        txt_ID.grabFocus();
                    } else {
                        txt_name.setText(search.getString("fname") + " " + search.getString("lname"));
                        memNic = txt_ID.getText();
                        loadPendingResubmissions();
                        jTable1.grabFocus();
                        jTable1.addRowSelectionInterval(0, 0);
                        txt_isbn.setText(null);
                        txt_fines1.setText("0");
                        txt_fines.setText("10.00");
                        txt_book_name.setText(null);
                    }
                } else {
                    lab_errorNic.setText("* No such Member");
                    txt_ID.setText(null);
                    txt_ID.grabFocus();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                SystemLogger.initLogger(ReceiveBooksBack.class).error("", ex);
            }
        }
    }//GEN-LAST:event_txt_IDActionPerformed

    private void txt_IDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_IDKeyPressed
        if ((evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105) || (evt.getKeyCode() >= 48
                && evt.getKeyCode() <= 57) || evt.getKeyCode() == KeyEvent.VK_BACKSPACE
                || evt.getKeyCode() == KeyEvent.VK_ENTER || (evt.getKeyCode() == KeyEvent.VK_V && !txt_ID.getText().contains("v"))
                || (!txt_ID.getText().contains("v") && txt_ID.getText().length() <= 12) || evt.getKeyCode() == KeyEvent.VK_UP) {

            txt_ID.setEditable(true);
            lab_errorNic.setText(null);

            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                if (!txt_ID.getText().trim().equals("") || txt_ID.getText() != null) {
                    loadPendingResubmissions();
                }
            } else if (evt.getKeyCode() == KeyEvent.VK_UP && txt_ID.getText().equals("")) {
                txt_name.grabFocus();
            }
        } else {
            txt_ID.setEditable(false);
        }
    }//GEN-LAST:event_txt_IDKeyPressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2 && jList1.getFirstVisibleIndex() != -1) {
            member = jList1.getSelectedValue();
            txt_name.setText(member.split("-")[0]);
            txt_ID.setText(member.split("-")[1]);
            loadPendingResubmissions();
            jScrollPane3.setVisible(false);
            jTable1.grabFocus();
            jTable1.addRowSelectionInterval(0, 0);
            txt_isbn.setText(null);
            txt_fines1.setText("0");
            txt_fines.setText("10.00");
            txt_book_name.setText(null);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && jList1.getFirstVisibleIndex() != -1) {
            member = jList1.getSelectedValue();
            txt_name.setText(member.split("-")[0]);
            memNic = member.split("-")[1];
            txt_ID.setText(memNic);
            loadPendingResubmissions();
            jScrollPane3.setVisible(false);
            jTable1.grabFocus();
            jTable1.addRowSelectionInterval(0, 0);
            txt_isbn.setText(null);
            txt_fines1.setText("0");
            txt_fines.setText("10.00");
            txt_book_name.setText(null);
        } else if ((evt.getKeyCode() == KeyEvent.VK_UP && jList1.getSelectedIndex() == 0)
                || (evt.getKeyCode() == KeyEvent.VK_UP && jList1.getFirstVisibleIndex() == -1)) {
            txt_name.grabFocus();
            jScrollPane3.setVisible(false);
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        //        jList1.grabFocus();
        //        jList1.setSelectedIndex(0);
        if (txt_name.getText().equals("") && jScrollPane3.isVisible()) {
            jScrollPane3.setVisible(false);
        } else {
            jList1.grabFocus();
            jList1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_txt_nameActionPerformed

    private void txt_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN && txt_name.getText().equals("")) {
            //            jList1.grabFocus();
            //            jList1.setSelectedIndex(0);
            txt_ID.grabFocus();
            jScrollPane3.setVisible(false);
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN && !txt_name.getText().equals("")) {
            jList1.grabFocus();
            jList1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_txt_nameKeyPressed

    private void txt_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nameKeyReleased
        if (!txt_name.getText().trim().equals("")) {
            try {
                ResultSet search = DBConnect.search("select m.id,m.fname,m.lname,m.nic from member m left join lendbook l on m.id=l.member_id where (fname like '%"
                        + txt_name.getText().toLowerCase() + "%' or lname like '%" + txt_name.getText().toLowerCase() + "%') and l.stat!=0");
                Vector v = new Vector();
                while (search.next()) {
                    int x = 0;
                    boolean availability = false;
                    if (v.size() != 0) {
                        while (x < v.size()) {
                            if ((search.getString("fname") + " " + search.getString("lname") + "-" + search.getString("nic")).equals(v.get(x).toString())) {
                                availability = true;
                                break;
                            } else {
                                availability = false;
                            }
                            x++;
                        }
                    } else {
                        availability = false;
                    }
                    if (availability == false) {
                        v.add(search.getString("fname") + " " + search.getString("lname") + "-" + search.getString("nic"));
                    }
                }
                jList1.setListData(v);
                jScrollPane3.setVisible(true);
            } catch (ClassNotFoundException | SQLException ex) {
                SystemLogger.initLogger(ReceiveBooksBack.class).error("Exception from SELECT query", ex);
            }
        } else {
            jScrollPane3.setVisible(false);
        }
    }//GEN-LAST:event_txt_nameKeyReleased

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txt_isbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_isbnActionPerformed

    }//GEN-LAST:event_txt_isbnActionPerformed

    private void txt_isbnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_isbnKeyPressed

    }//GEN-LAST:event_txt_isbnKeyPressed

    private void txt_book_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_book_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_book_nameActionPerformed

    private void txt_book_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_book_nameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_book_nameKeyPressed

    private void txt_finesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_finesActionPerformed
        jTable1.setRowSelectionInterval(selectedRow, selectedRow);
        int passedDays = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        if (passedDays != 0) {
            txt_fines1.setText(String.valueOf(passedDays * Double.parseDouble(txt_fines.getText())));
            but_receive.grabFocus();
        }
    }//GEN-LAST:event_txt_finesActionPerformed

    private void txt_fines1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fines1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fines1ActionPerformed

    private void txt_fines1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fines1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fines1KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            txt_isbn.setText(dtm.getValueAt(jTable1.getSelectedRow(), 1).toString());
            txt_book_name.setText(dtm.getValueAt(jTable1.getSelectedRow(), 2).toString());
            if (Integer.parseInt(dtm.getValueAt(jTable1.getSelectedRow(), 5).toString()) != 0) {
                txt_fines.setEnabled(true);
                txt_fines.grabFocus();
                selectedRow = jTable1.getSelectedRow();
            } else {
                txt_fines.setEnabled(false);
                but_receive.grabFocus();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void but_receiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_receiveActionPerformed
        receiveBook();
    }//GEN-LAST:event_but_receiveActionPerformed

    private void but_receiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_receiveKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_receive.doClick();
        }
    }//GEN-LAST:event_but_receiveKeyPressed

    private void txt_finesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_finesKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_finesKeyTyped

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (jTable1.getRowCount() != 0 && evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            txt_isbn.setText(dtm.getValueAt(jTable1.getSelectedRow(), 1).toString());
            txt_book_name.setText(dtm.getValueAt(jTable1.getSelectedRow(), 2).toString());
            if (Integer.parseInt(dtm.getValueAt(jTable1.getSelectedRow(), 5).toString()) != 0) {
                txt_fines.setEnabled(true);
                txt_fines.grabFocus();
                selectedRow = jTable1.getSelectedRow();
            } else {
                txt_fines.setEnabled(false);
                but_receive.grabFocus();
            }
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void txt_finesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_finesFocusGained
        jTable1.setRowSelectionInterval(selectedRow, selectedRow);
    }//GEN-LAST:event_txt_finesFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            SystemLogger.initLogger(ReceiveBooksBack.class).error("Exception from main() method", ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ReceiveBooksBack().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_receive;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lab_errorNic;
    private javax.swing.JLabel lab_image;
    public javax.swing.JTextField txt_ID;
    private javax.swing.JTextField txt_book_name;
    private javax.swing.JTextField txt_fines;
    private javax.swing.JTextField txt_fines1;
    private javax.swing.JTextField txt_isbn;
    private javax.swing.JTextField txt_name;
    // End of variables declaration//GEN-END:variables

    private void loadPendingResubmissions() {
        try {
            ResultSet search = DBConnect.search("select m.*,l.*,b.* from member m left join lendbook l on m.id=l.member_id inner join book b on l.book_isbn=b.isbn where m.nic='" + memNic + "' and l.stat!=0");
            Vector v;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (search.next()) {
                v = new Vector();
                v.add(search.getString("l.id"));
                v.add(search.getString("book_isbn"));
                v.add(search.getString("name"));
                v.add(search.getString("lend_date"));
                v.add(search.getString("due_date"));
                Date d = sdf.parse(search.getString("due_date"));
                long days = (new Date().getTime() - d.getTime()) / 1000 / 3600 / 24;
                System.out.println(days);
                if (days <= 0) {
                    v.add(0);
                } else {
                    v.add(days);
                }
                dtm.addRow(v);
            }
        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            SystemLogger.initLogger(ReceiveBooksBack.class).error("Exception from SELECT query", ex);
        }
    }

    private void setImage(File img, JLabel label) {
        try {
            Image image = ImageIO.read(new FileInputStream(img));
            image = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            label.setIcon(new ImageIcon(image));
        } catch (IOException ex) {
            SystemLogger.initLogger(ReceiveBooksBack.class).error("Exception from setImage() method", ex);
        }
    }

    void setButtons() {
        jButton5.setOpaque(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setBorderPainted(false);
        jButton6.setOpaque(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setBorderPainted(false);
    }

    private void receiveBook() {
        try {
            DBConnect.iud("update lendbook set returned_date=CURDATE(), fines_paid='" + Double.parseDouble(txt_fines1.getText()) + "', "
                    + "stat=0 where id='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
            DBConnect.iud("update book set availableqty=availableqty+1 where isbn='"+txt_isbn.getText()+"'");
            JOptionPane.showMessageDialog(rootPane, "Receiving successful!");
            clearFields();
        } catch (HeadlessException | ClassNotFoundException | NumberFormatException | SQLException ex) {
            SystemLogger.initLogger(ReceiveBooksBack.class).error("Exception from UPDATE query", ex);
        }
    }

    private void clearFields() {
        txt_name.setText(null);
        txt_name.grabFocus();
        txt_ID.setText(null);
        txt_isbn.setText(null);
        txt_book_name.setText(null);
        txt_fines.setText("10.00");
        txt_fines1.setText("0");
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
    }
}
